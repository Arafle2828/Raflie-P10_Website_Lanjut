{"ast":null,"code":"// Fungsi untuk mengolah data di thread utama (mirip dengan Web Worker)\nexport const processData = (data, operasi, filter, sortBy, sortOrder) => {\n  const startTime = performance.now();\n  let hasil = [...data];\n\n  // Lakukan filter jika diperlukan\n  if (operasi === 'filter' || operasi === 'both') {\n    if (filter.umurMin) {\n      hasil = hasil.filter(p => p.umur >= filter.umurMin);\n    }\n    if (filter.umurMax) {\n      hasil = hasil.filter(p => p.umur <= filter.umurMax);\n    }\n    if (filter.nama) {\n      hasil = hasil.filter(p => p.nama.toLowerCase().includes(filter.nama.toLowerCase()));\n    }\n  }\n\n  // Lakukan sorting jika diperlukan\n  if (operasi === 'sort' || operasi === 'both') {\n    if (sortBy === 'nama') {\n      hasil.sort((a, b) => {\n        const comparison = a.nama.localeCompare(b.nama);\n        return sortOrder === 'asc' ? comparison : -comparison;\n      });\n    } else if (sortBy === 'umur') {\n      hasil.sort((a, b) => {\n        const comparison = a.umur - b.umur;\n        return sortOrder === 'asc' ? comparison : -comparison;\n      });\n    }\n  }\n  const endTime = performance.now();\n  return {\n    hasil: hasil,\n    waktuProses: endTime - startTime\n  };\n};\n\n// Fungsi untuk memeriksa apakah cache masih valid\nexport const isCacheValid = timestamp => {\n  const now = new Date().getTime();\n  const cacheTime = parseInt(timestamp);\n  const expiryTime = 5 * 60 * 1000; // 5 menit dalam milidetik\n\n  return now - cacheTime < expiryTime;\n};","map":{"version":3,"names":["processData","data","operasi","filter","sortBy","sortOrder","startTime","performance","now","hasil","umurMin","p","umur","umurMax","nama","toLowerCase","includes","sort","a","b","comparison","localeCompare","endTime","waktuProses","isCacheValid","timestamp","Date","getTime","cacheTime","parseInt","expiryTime"],"sources":["C:/WebLanjut_RaflieAditya_2/p10_async_adv/frontend/src/dataUtils.js"],"sourcesContent":["// Fungsi untuk mengolah data di thread utama (mirip dengan Web Worker)\r\nexport const processData = (data, operasi, filter, sortBy, sortOrder) => {\r\n    const startTime = performance.now();\r\n    \r\n    let hasil = [...data];\r\n    \r\n    // Lakukan filter jika diperlukan\r\n    if (operasi === 'filter' || operasi === 'both') {\r\n      if (filter.umurMin) {\r\n        hasil = hasil.filter(p => p.umur >= filter.umurMin);\r\n      }\r\n      if (filter.umurMax) {\r\n        hasil = hasil.filter(p => p.umur <= filter.umurMax);\r\n      }\r\n      if (filter.nama) {\r\n        hasil = hasil.filter(p => p.nama.toLowerCase().includes(filter.nama.toLowerCase()));\r\n      }\r\n    }\r\n    \r\n    // Lakukan sorting jika diperlukan\r\n    if (operasi === 'sort' || operasi === 'both') {\r\n      if (sortBy === 'nama') {\r\n        hasil.sort((a, b) => {\r\n          const comparison = a.nama.localeCompare(b.nama);\r\n          return sortOrder === 'asc' ? comparison : -comparison;\r\n        });\r\n      } else if (sortBy === 'umur') {\r\n        hasil.sort((a, b) => {\r\n          const comparison = a.umur - b.umur;\r\n          return sortOrder === 'asc' ? comparison : -comparison;\r\n        });\r\n      }\r\n    }\r\n    \r\n    const endTime = performance.now();\r\n    \r\n    return {\r\n      hasil: hasil,\r\n      waktuProses: endTime - startTime\r\n    };\r\n  };\r\n  \r\n  // Fungsi untuk memeriksa apakah cache masih valid\r\n  export const isCacheValid = (timestamp) => {\r\n    const now = new Date().getTime();\r\n    const cacheTime = parseInt(timestamp);\r\n    const expiryTime = 5 * 60 * 1000; // 5 menit dalam milidetik\r\n    \r\n    return now - cacheTime < expiryTime;\r\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,KAAK;EACrE,MAAMC,SAAS,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;EAEnC,IAAIC,KAAK,GAAG,CAAC,GAAGR,IAAI,CAAC;;EAErB;EACA,IAAIC,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,MAAM,EAAE;IAC9C,IAAIC,MAAM,CAACO,OAAO,EAAE;MAClBD,KAAK,GAAGA,KAAK,CAACN,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAIT,MAAM,CAACO,OAAO,CAAC;IACrD;IACA,IAAIP,MAAM,CAACU,OAAO,EAAE;MAClBJ,KAAK,GAAGA,KAAK,CAACN,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAIT,MAAM,CAACU,OAAO,CAAC;IACrD;IACA,IAAIV,MAAM,CAACW,IAAI,EAAE;MACfL,KAAK,GAAGA,KAAK,CAACN,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,MAAM,CAACW,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IACrF;EACF;;EAEA;EACA,IAAIb,OAAO,KAAK,MAAM,IAAIA,OAAO,KAAK,MAAM,EAAE;IAC5C,IAAIE,MAAM,KAAK,MAAM,EAAE;MACrBK,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACnB,MAAMC,UAAU,GAAGF,CAAC,CAACJ,IAAI,CAACO,aAAa,CAACF,CAAC,CAACL,IAAI,CAAC;QAC/C,OAAOT,SAAS,KAAK,KAAK,GAAGe,UAAU,GAAG,CAACA,UAAU;MACvD,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIhB,MAAM,KAAK,MAAM,EAAE;MAC5BK,KAAK,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACnB,MAAMC,UAAU,GAAGF,CAAC,CAACN,IAAI,GAAGO,CAAC,CAACP,IAAI;QAClC,OAAOP,SAAS,KAAK,KAAK,GAAGe,UAAU,GAAG,CAACA,UAAU;MACvD,CAAC,CAAC;IACJ;EACF;EAEA,MAAME,OAAO,GAAGf,WAAW,CAACC,GAAG,CAAC,CAAC;EAEjC,OAAO;IACLC,KAAK,EAAEA,KAAK;IACZc,WAAW,EAAED,OAAO,GAAGhB;EACzB,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMkB,YAAY,GAAIC,SAAS,IAAK;EACzC,MAAMjB,GAAG,GAAG,IAAIkB,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAChC,MAAMC,SAAS,GAAGC,QAAQ,CAACJ,SAAS,CAAC;EACrC,MAAMK,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;EAElC,OAAOtB,GAAG,GAAGoB,SAAS,GAAGE,UAAU;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}